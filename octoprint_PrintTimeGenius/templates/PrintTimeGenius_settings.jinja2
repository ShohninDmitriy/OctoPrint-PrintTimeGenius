<form class="form-horizontal">
  <div class="control-group">
    <h3>{{ _('Общий параметр') }}</h3>
    <label class="checkbox"><input type="checkbox" data-bind="checked: exactDurations">{{ _('Отображение точных длительностей вместо нечетких') }}</label>
    <label class="checkbox"><input type="checkbox" data-bind="checked: enableOctoPrintAnalyzer">{{ _('Включить встроенный анализатор OctoPrint (медленный и ненужный)') }}</label>
    <label title="{{ _('Анализ файла во время нагрева не должен влиять на производительность.') }}"
           class="checkbox"><input
                              type="checkbox"
                              data-bind="checked: allowAnalysisWhileHeating">{{ _('Разрешить анализ во время нагрева (вступает в силу только после сохранения)') }}</label>
    <label title="{{ _('Анализ файла во время печати может привести к снижению производительности печати.') }}"
           class="checkbox"><input
                              type="checkbox"
                              data-bind="checked: allowAnalysisWhilePrinting">{{ _('Разрешить анализ во время печати (вступает в силу только после сохранения)') }}<span class="label label-important">{{ _('May slow down your printer') }}</span></label>
    <h3>{{ _('Анализаторы') }}</h3>
    <!-- ko foreach: analyzers -->
      <label class="checkbox">
        <input type="checkbox" data-bind="checked: enabled"><div type="checkbox" data-bind="text: description"></div>
      </label>
    <!-- /ko -->
    <h3>{{ _('Анализировать') }}</h3>
    {{ _('Вы можете использовать это для запуска анализа прямо сейчас, а также посмотреть на выходные данные для отладки проблем.') }}
    <div class="row-fluid" data-bind="if: filesViewModel.allItems()">
      <label class="span9">{{ _('Файлы для анализа:') }}
        <select class="span9" id="stlviewer_file_list" multiple="true"
                data-bind="options: FileList,
                           optionsText: function(item) {
                             if(_.has(item, 'gcodeAnalysis.progress')) {
                               return item.path + ' ★';
                             } else if(_.has(item, 'gcodeAnalysis.analysisPending')) {
                               return item.path + ' ⌛';
                             } else {
                               return item.path;
                             }
                           },
                           selectedOptions: selectedGcodes,
                           event: { }">
        </select>
      </label>
      <button class="btn" data-bind="event: { click: analyzeCurrentFile }">{{ _('Анализировать') }}</button>
    </div>

    <div>
      <div>
        <small>
          <a href="#" class="muted" onclick="$(this).children().toggleClass('fa-caret-right fa-caret-down').parent().parent().parent().next().slideToggle('fast')">
            <i class="fa fa-caret-right"></i> {{ _('Прогрессивный') }}
          </a>
        </small>
      </div>
      <div class="hide" style="display: none;">
        <h3>{{ _('Анализаторы') }}</h3>
        <button class="btn" title="{{ _('Анализаторы по умолчанию являются рекомендуемыми настройками для всех пользователей') }}"
                data-bind="event: { click: resetAnalyzersToDefault }">{{ _('Сброс анализаторов к значению по умолчанию') }}</button>
        <div class="row-fluid">
          <h4 class="span10">
            <div class="span4">{{ _('Описание') }}</div>
            <div class="span7">{{ _('Команда') }}</div>
            <div class="span1">{{ _('Включенный') }}</div>
        </div>
        <div style="margin-top: 5px" data-bind="foreach: analyzers">
          <div>
            <div class="span10">
              <input type="text" class="span4 text-left" data-bind="value: description">
              <input type="text" class="span7 text-left" data-bind="value: command">
              <input type="checkbox" style="margin-left: 20px" data-bind="checked: enabled">
            </div>
            <div class="span2">
              <a title="{{ _('Удалить анализатор') }}" class="btn btn-danger" data-bind="click: $parent.removeAnalyzer"><i class="fa fa-trash-o"></i></a>
            </div>
          </div>
        </div>
        <div class="row-fluid">
          <div class="offset10 span2" style="margin-top: 5px">
            <a title="{{ _('Добавить анализатор') }}" class="btn btn-primary" data-bind="click: addAnalyzer"><i class="fa fa-plus"></i></a>
          </div>
        </div>
        <h3>{{ _('Отладка') }}</h3>
        <h4>{{ _('Отладочный Анализ') }}</h4>
        {{ _('Проанализируйте файл, а затем <a href="downloads/logs/plugin_PrintTimeGenius_engine.log">загрузить журнал</a>.
        Если вы видите ошибки, <a href="https://github.com/eyal0/OctoPrint-PrintTimeGenius/issues">сообщить о них</a>.') }}
        <h4>{{ _('Отладка Оценок') }}</h4>
        <p><span class="label label-important">{{ _('Может замедлить работу принтера') }}</span>
          <!-- Only translate the text, not the HTML! -->
          {{ _('Если вы хотите сделать график оценки времени печати и сравнить со встроенными оценками OctoPrint:
          <ol>
            <li>В разделе Настройки перейдите к Журналированию.</li>
            <li>Set "octoprint.plugins.PrintTimeGenius" уровень до "DEBUG".</li>
            <li>Click на синем плюсе.</li>
            <li>Click и сохраните.</li>
          </ol>
        </p>
        <p>
          Now print something and the log will fill with a <a href="https://en.wikipedia.org/wiki/Comma-separated_values">csv</a>.
          <a href="downloads/logs/plugin_PrintTimeGenius_engine.log">Download the log</a>, remove unnecessary lines, and import to a spreadsheet.
        </p>') }}
        <h3>{{ _('Значения компенсации') }}</h3>
        <table class="print-time-genius-table" style="border: 2px solid black;">
          <thead style="border: 1px solid black;">
            <tr>
              <th style="border-left: 1px black solid; border-right: 1px black solid;" colspan=4>{{ _('Актуальный') }}</th>
              <th style="border-left: 1px black solid; border-right: 1px black solid;" colspan=3>{{ _('Предсказанный') }}</th>
              <th style="border-left: 1px black solid; border-right: 1px black solid;" colspan=1>{{ _('Компенсированный') }}</th>
            </tr>
            <tr>
              <th style="border-left: 1px black solid;">{{ _('Нагрев') }}</th>
              <th>{{ _('Выдавливание') }}</th>
              <th>{{ _('Охлаждение') }}</th>
              <th style="border-right: 1px black solid;">{{ _('Весь') }}</th>
              <th style="border-left: 1px black solid;">{{ _('Нагрев') }}</th>
              <th>{{ _('Выдавливание') }}</th>
              <th style="border-right: 1px black solid;">{{ _('Охлаждение') }}</th>
              <th style="border-left: 1px black solid; border-right: 1px black solid;">{{ _('Весь') }}</th>
            </tr>
          </thead>
          <tbody data-bind="foreach: print_history">
            <tr>
              <td style="border-left: 1px black solid;" data-bind="text:
                             _.has($data, 'firstFilamentPrintTime') ?
                             firstFilamentPrintTime().toFixed(1) : ''"></td>
              <td data-bind="text:
                             _.has($data, 'lastFilamentPrintTime') && _.has($data, 'firstFilamentPrintTime') ?
                             (lastFilamentPrintTime()-firstFilamentPrintTime()).toFixed(1) : ''"></td>
              <td data-bind="text:
                             _.has($data, 'payload.time') && _.has($data, 'lastFilamentPrintTime') ?
                             (payload.time()-lastFilamentPrintTime()).toFixed(1) : ''"></td>
              <td style="border-right: 1px black solid; font-weight: bold"
                  data-bind="text:
                             _.has($data, 'payload.time') ?
                             payload.time().toFixed(1) : ''"></td>
              <td style="border-left: 1px black solid;" data-bind="text:
                             _.has($data, 'analysisFirstFilamentPrintTime') ?
                             analysisFirstFilamentPrintTime().toFixed(1) : ''"></td>
              <td data-bind="text:
                             _.has($data, 'analysisLastFilamentPrintTime') && _.has($data, 'analysisFirstFilamentPrintTime') ?
                             (analysisLastFilamentPrintTime()-analysisFirstFilamentPrintTime()).toFixed(1) : ''"></td>
              <td style="border-right: 1px black solid;" data-bind="text:
                             _.has($data, 'analysisPrintTime') && _.has($data, 'analysisLastFilamentPrintTime') ?
                             (analysisPrintTime()-analysisLastFilamentPrintTime()).toFixed(1) : ''"></td>
              <td style="border-left: 1px black solid; border-right: 1px black solid; font-weight: bold"
                  data-bind="text:
                             _.has($data, 'compensatedPrintTime') ?
                             compensatedPrintTime().toFixed(1) : ''"></td>
              <td>
                <a title="{{ _('Удалите строку, если это нетипичный образец и не должен использоваться для будущей компенсации') }}" class="btn btn-danger" data-bind="click: $parent.removePrintHistoryRow"><i class="fa fa-trash-o"></i></a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</form>
